{
    "collab_server" : "",
    "contents" : "\nlibrary(shiny)\nlibrary(DT)\nlibrary(shinydashboard)\nlibrary(leaflet)\nlibrary(plotly)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\n\n# Define server logic required to plot various variables against mpg\nshinyServer(function(input, output) {\n  \n  dataDpto<-read.csv(\"./data/dataDptoCoords.csv\")\n  mColDeptPop<-read.csv(\"./data/mColDeptPop.csv\")\n  \n  data<-reactive({\n    read.csv(\"./data/MalReportDptos_2007_16.csv\")  \n  })\n\n  output$filmuni<-renderUI({\n    data<-data()\n    selectInput(\"depto\", \"Filter by Department:\",c(\"\",sort(unique(as.character(data$Nombre.Dpto)))))\n  })\n  \n  output$distPlot <- renderPlotly({\n    data<-data()\n    if(input$x_var==\"Total\"){\n      data2<-data%>%filter(Year>=input$Year[1] & Year<=input$Year[2])%>%group_by(Year)%>%summarise(Cases=sum(Cases))\n      data2$Year<-factor(data2$Year)\n      # Create plot\n      plot_ly(data2, type=\"scatter\" , mode=\"lines\",x= ~Year, y= ~Cases)%>% \n        layout(scene = list(xaxis = list(title = \"Year\")))\n      \n      \n    }else{\n      if(input$depto==\"\"){\n        data2<-data%>%filter(Year>=input$Year[1] & Year<=input$Year[2])%>%group_by_(\"Year\", Var=input$x_var)%>%summarise(Cases=sum(Cases))\n      \n      }else{\n        data2<-data%>%filter(Year>=input$Year[1] & Year<=input$Year[2] & Nombre.Dpto==input$depto)%>%group_by_(\"Year\", Var=input$x_var)%>%summarise(Cases=sum(Cases))\n      \n      }\n\n      a<-ggplot(data2,aes(x=Year,y=Cases,col=Var))+geom_point(size=2)+geom_line(size=1)+\n        scale_x_continuous(breaks = seq(as.numeric(input$Year[1]),as.numeric(input$Year[2]),1))+\n        scale_color_discrete(name=input$x_var)+xlab(\"Year\")+\n        theme_classic()+theme(panel.border=element_rect(colour = \"black\", fill=NA),legend.position=\"bottom\",legend.title=element_blank())+xlab(\"\")\n      ggplotly(a)\n    }\n  })\n  \n  output$table<-renderDataTable({\n    data<-data()\n    if(input$x_var==\"Total\"){\n      datatable(data%>%filter(Year>=input$Year[1] & Year<=input$Year[2])%>%group_by(Year)%>%summarise(Cases=sum(Cases))%>%arrange(desc(Cases)))\n    }else{\n      if(input$depto==\"\"){\n        DT::datatable(data%>%filter(Year>=input$Year[1] & Year<=input$Year[2])%>%group_by_(\"Year\", Var=input$x_var)%>%summarise(Cases=sum(Cases))%>%arrange(desc(Cases)))\n      }else{\n        DT::datatable(data%>%filter(Year>=input$Year[1] & Year<=input$Year[2] & Nombre.Dpto==input$depto)%>%group_by_(\"Year\", Var=input$x_var)%>%summarise(Cases=sum(Cases))%>%arrange(desc(Cases)))\n      }\n    }\n  })\n  \n  output$map<-renderLeaflet({\n    data<-data()\n    # oDeptos<-oDeptos()\n    data3<-data%>%filter(Year==input$Year[2])%>%group_by(Nombre.Dpto)%>%summarise(Cases=sum(Cases))\n    # mColDeptPop$Year<-mColDeptPop$AÃ±o\n    mColDeptPop<-mColDeptPop%>%filter(Year==input$Year[2])\n\n    data3$Nombre.Dpto<-as.character(data3$Nombre.Dpto)\n    dataDpto$Nombre.Dpto<-as.character(dataDpto$Nombre.Dpto)\n    a2<-left_join(data3,dataDpto,by=c(\"Nombre.Dpto\"))\n\n    mColDeptPop$DEPTO<-as.character(mColDeptPop$DEPTO)\n    a2<-left_join(a2,mColDeptPop,by=c(\"Nombre.Dpto\"=\"DEPTO\"))\n\n    a2$Nombre.Dpto<-factor(a2$Nombre.Dpto)\n    a2<-a2%>%filter(!is.na(Longitud) | !is.na(Latitud))\n\n    a2$Longitud<-gsub(\",\",\".\",a2$Longitud)\n    a2$Latitud<-gsub(\",\",\".\",a2$Latitud)\n\n    a2<-a2[!(is.na(a2$Latitud)) & !(is.na(a2$Longitud)),]\n\n    leaflet() %>% setView( -74.2, 3.2 ,zoom=5)%>%\n      addTiles() %>%\n        addCircles(lng=as.numeric(a2$Longitud),lat=as.numeric(a2$Latitud),radius = a2$Cases,color =\"red\",popup =paste(\"Department:\",a2$Nombre.Dpto,\"<br> Cases:\",a2$Cases,\" Population:\",a2$Poblacion))\n  })\n\n})",
    "created" : 1489300791552.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3810387169",
    "id" : "8726EC8B",
    "lastKnownWriteTime" : 1489302553,
    "last_content_update" : 1489302553155,
    "path" : "C:/Users/SAMSUNG/Desktop/Trabajo Final/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}